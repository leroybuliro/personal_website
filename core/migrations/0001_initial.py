# Generated by Django 4.1.7 on 2023-04-17 12:54

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('featureimage', models.ImageField(upload_to='core/article/%Y/%m/')),
                ('featureimageURI', models.URLField(blank=True, null=True)),
                ('title', models.CharField(max_length=500)),
                ('slug', models.CharField(max_length=500)),
                ('writer', models.CharField(default='Leroy Buliro', max_length=100)),
                ('credit', models.CharField(blank=True, max_length=700, null=True)),
                ('publishdate', models.DateField()),
                ('extract', models.CharField(blank=True, max_length=2000, null=True)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('P', 'Publish')], max_length=10)),
            ],
            options={
                'db_table': 'article',
                'ordering': ['-publishdate'],
            },
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'article_category',
            },
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'article_tag',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=500)),
                ('location', models.CharField(max_length=100)),
                ('poster', models.ImageField(upload_to='core/events/%Y/%m/')),
                ('posterURI', models.URLField()),
                ('url', models.URLField()),
            ],
            options={
                'db_table': 'event',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('postdate', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(max_length=500)),
                ('ratings', models.IntegerField()),
                ('source', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'feedback',
                'ordering': ['-postdate'],
            },
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
            ],
            options={
                'db_table': 'mailing',
            },
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IPAddres', models.GenericIPAddressField(default='0.0.0.0')),
                ('page', models.CharField(max_length=40, null=True)),
                ('device', models.CharField(default='null', max_length=400)),
                ('visited', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'stats',
                'ordering': ['-page'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content', models.TextField(max_length=420)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ArticleStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IPAddres', models.GenericIPAddressField(default='0.0.0.0')),
                ('device', models.CharField(default='null', max_length=400)),
                ('visited', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.article')),
            ],
            options={
                'db_table': 'article_stat',
                'ordering': ['-visited'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='articles', to='core.articlecategory'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(related_name='tags', to='core.articletag'),
        ),
    ]
